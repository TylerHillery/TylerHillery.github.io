---
title: "MIT 6.042J Mathematics for Computer Science"
description: My notes on [MIT 6.042J Mathematics for Computer Science](https://openlearninglibrary.mit.edu/courses/course-v1:OCW+6.042J+2T2019/about) taught by professors Albert Meyer and Adam Chlipala.
author: "Tyler Hillery"
date: "2024-01-01"
image: "./MiT_math_for_cs.png"
filters:
  - social-share
share:
  permalink: "https://tylerhillery.com/notes/mit-math-for-cs/"
  description:
  twitter: true
  facebook: false
  reddit: true
  stumble: false
  tumblr: false
  linkedin: true
  email: true
  mastodon: true
categories: [Courses, In Progress]
draft: true 
---

------------------------------------------------------------------------
# Relevant Links
- MIT OpenCourseWare [Course Link](https://ocw.mit.edu/courses/6-042j-mathematics-for-computer-science-spring-2015/)
- MIT OpenLearningLibrary [Course Link](https://openlearninglibrary.mit.edu/courses/course-v1:OCW+6.042J+2T2019/about)

# Course Description
This subject offers an interactive introduction to discrete mathematics oriented toward computer science and engineering. The subject coverage divides roughly into thirds:

1. Fundamental concepts of mathematics: Definitions, proofs, sets, functions, relations.
2. Discrete structures: graphs, state machines, modular arithmetic, counting.
3. Discrete probability theory.

On completion of 6.042J, students will be able to explain and apply the basic methods of discrete (noncontinuous) mathematics in computer science. They will be able to use these methods in subsequent courses in the design and analysis of algorithms, computability theory, software engineering, and computer systems.

:::{.callout-note collapse="true" title="Syllabus"}
## Introduction
This subject offers an introduction to discrete mathematics oriented toward computer science and engineering.

The subject coverage is divided into three parts:

1. Fundamental concepts of mathematics: Definitions, proofs, sets, functions.
2. Discrete structures: Elementary number theory, graphs, counting.
3. Discrete probability theory.

## Prerequisite
The prerequisite is [18.01 Single Variable Calculus](https://ocw.mit.edu/courses/18-01sc-single-variable-calculus-fall-2010). In particular, some familiarity with sequences and series, limits, and differentiation and integration of functions of one variable are necessary.

## Objectives
Upon completion of 6.042J, students will be able to explain and apply basic methods of discrete (noncontinuous) mathematics in computer science. They will be able to use these methods in subsequent courses in the design and analysis of algorithms, computability theory, software engineering, and computer systems.

In particular, students will be able to:

1. Reason mathematically about basic data types and structures (such as numbers, sets, graphs, and trees) used in computer algorithms and systems; distinguish rigorous definitions and conclusions from merely plausible ones; synthesize elementary proofs, especially proofs by induction.
2. Model and analyze computational processes using analytic and combinatorial methods.
3. Apply principles of discrete probability to calculate probabilities and expectations of simple random processes.
4. Work in small teams to accomplish all the objectives above.

## Learning Outcomes
At the end of this course, students will be able to:

1. Use logical notation to define and reason about fundamental mathematical concepts such as sets, relations, functions, and integers.
2. Evaluate elementary mathematical arguments and identify fallacious reasoning (not just fallacious conclusions).
3. Synthesize induction hypotheses and simple induction proofs.
4. Prove elementary properties of modular arithmetic and explain their applications in computer science, for example, in cryptography and hashing algorithms.
5. Apply graph-theoretic models of data structures and state machines to solve problems of connectivity and constraint satisfaction (e.g. scheduling).
6. Apply the method of invariants and well-founded ordering to prove correctness and termination of processes and state machines.
7. Derive closed-form and asymptotic expressions from series and recurrences for growth rates of processes.
8. Calculate numbers of possible outcomes of elementary combinatorial processes such as permutations and combinations.
9. Calculate probabilities and discrete distributions for simple combinatorial processes; calculate expectations.
10. Problem solve and study in a small team with fellow students.

## Team Problem Solving
6.042J is taught as a “flipped” class: Students prepare by doing assigned reading and answering online questions before class. Class meeting time is then devoted almost entirely to problem solving in teams of 6 to 8 students sitting around a table with a nearby whiteboard where a team can write their solutions. Participation in team sessions counts for 25% of the final grade.

:::

# Reading Chapter 1.1-1.6 Introduction to Proofs

## 1.1 Propositions

> A *proposition* is a statement that is either true or false. 

- Here are two examples were the first is true and the second is false

$$ 
\begin{aligned}
2 + 3 &= 5 \\ 
1 + 1 &= 3
\end{aligned} 
$$

