{
  "hash": "f488e7f282b2614a79ee50f070788172",
  "result": {
    "markdown": "---\ntitle: Quarto Reference Notes\ndescription: Cool things that you can do with Quarto that I want to be able to reference back to\nauthor: Tyler Hillery\ndate: 2022-012-25\ncategories:\n  - Quarto\nimage: ../../assets/images/quarto-logo.jpg\n---\n\n## Text Formatting\n\n+-----------------------------------+-------------------------------+\n| Markdown Syntax                   | Output                        |\n+===================================+===============================+\n|     *italics* and **bold**        | *italics* and **bold**        |\n+-----------------------------------+-------------------------------+\n|     superscript^2^ / subscript~2~ | superscript^2^ / subscript~2~ |\n+-----------------------------------+-------------------------------+\n|     ~~strikethrough~~             | ~~strikethrough~~             |\n+-----------------------------------+-------------------------------+\n|     `verbatim code`               | `verbatim code`               |\n+-----------------------------------+-------------------------------+\n|     >quote block                  | > quote block                 |\n+-----------------------------------+-------------------------------+\n\n## Headings\n\n+---------------------+-----------------------------------+\n| Markdown Syntax     | Output                            |\n+=====================+===================================+\n|     # Header 1      | # Header 1 {.heading-output}      |\n+---------------------+-----------------------------------+\n|     ## Header 2     | ## Header 2 {.heading-output}     |\n+---------------------+-----------------------------------+\n|     ### Header 3    | ### Header 3 {.heading-output}    |\n+---------------------+-----------------------------------+\n|     #### Header 4   | #### Header 4 {.heading-output}   |\n+---------------------+-----------------------------------+\n|     ##### Header 5  | ##### Header 5 {.heading-output}  |\n+---------------------+-----------------------------------+\n|     ###### Header 6 | ###### Header 6 {.heading-output} |\n+---------------------+-----------------------------------+\n\n## Links & Images\n\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n| Markdown Syntax                                                  | Output                                                                                                 |\n+==================================================================+========================================================================================================+\n|     <https://quarto.org>                                         | <https://quarto.org>                                                                                   |\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n|     [Quarto](https://quarto.org)                                 | [Quarto](https://quarto.org)                                                                           |\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n|     ![Caption](elephant.png)                                     | ![Caption](elephant.png){fig-alt=\"A line drawing of an elephant.\"}                                     |\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n|     [![Caption](elephant.png)](https://quarto.org)               | [![Caption](elephant.png)](https://quarto.org)                                                         |\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n|     [![Caption](elephant.png)](https://quarto.org \"An elephant\") | [![Caption](elephant.png \"An elephant\"){fig-alt=\"A line drawing of an elephant.\"}](https://quarto.org) |\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n|     [![](elephant.png){fig-alt=\"Alt text\"}](https://quarto.org)  | [![](elephant.png){fig-alt=\"A line drawing of an elephant.\"}](https://quarto.org)                      |\n+------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+\n\n## Lists\n\n+-------------------------------------+---------------------------------+\n| Markdown Syntax                     | Output                          |\n+=====================================+=================================+\n|     * unordered list                | -   unordered list              |\n|         + sub-item 1                |                                 |\n|         + sub-item 2                |     -   sub-item 1              |\n|             - sub-sub-item 1        |                                 |\n|                                     |     -   sub-item 2              |\n|                                     |                                 |\n|                                     |         -   sub-sub-item 1      |\n+-------------------------------------+---------------------------------+\n|     *   item 2                      | -   item 2                      |\n|                                     |                                 |\n|         Continued (indent 4 spaces) |     Continued (indent 4 spaces) |\n+-------------------------------------+---------------------------------+\n|     1. ordered list                 | 1.  ordered list                |\n|     2. item 2                       |                                 |\n|         i) sub-item 1               | 2.  item 2                      |\n|              A.  sub-sub-item 1     |                                 |\n|                                     |     i)  sub-item 1              |\n|                                     |                                 |\n|                                     |         A.  sub-sub-item 1      |\n+-------------------------------------+---------------------------------+\n|     (@)  A list whose numbering     | (1) A list whose numbering      |\n|                                     |                                 |\n|     continues after                 | continues after                 |\n|                                     |                                 |\n|     (@)  an interruption            | (2) an interruption             |\n+-------------------------------------+---------------------------------+\n|     term                            | term                            |\n|     : definition                    |                                 |\n|                                     | :   definition                  |\n+-------------------------------------+---------------------------------+\n\n## Tables\n\n**Markdown Syntax**\n\n    | Right | Left | Default | Center |\n    |------:|:-----|---------|:------:|\n    |   12  |  12  |    12   |    12  |\n    |  123  |  123 |   123   |   123  |\n    |    1  |    1 |     1   |     1  |\n\n**Output**\n\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|    12 | 12   | 12      |   12   |\n|   123 | 123  | 123     |  123   |\n|     1 | 1    | 1       |   1    |\n\n### Table Cross Reference\n\nFor tables produced by executable code cells, include a label with a tbl- prefix to make them cross-referenceable. For example:\n\n::: {#tbl-planets .cell .tbl-column-margin tbl-cap='Planets' execution_count=1}\n```` { .cell-code}\n```{{python}}\n#| label: tbl-planets\n#| tbl-cap: Planets\n#| tbl-column: margin\nfrom IPython.display import Markdown\nfrom tabulate import tabulate\ntable = [[\"Sun\",696000,1989100000],\n         [\"Earth\",6371,5973.6],\n         [\"Moon\",1737,73.5],\n         [\"Mars\",3390,641.85]]\nMarkdown(tabulate(\n  table, \n  headers=[\"Planet\",\"R (km)\", \"mass (x 10^29 kg)\"]\n))\n```\n\n````\n\n::: {.cell-output .cell-output-display execution_count=4}\nPlanet      R (km)    mass (x 10^29 kg)\n--------  --------  -------------------\nSun         696000           1.9891e+09\nEarth         6371        5973.6\nMoon          1737          73.5\nMars          3390         641.85\n:::\n:::\n\n\n## Source Code\n\nUse ```` ``` ```` to delimit blocks of source code:\n\n````` markdown\n```python\na_string = \"hello world\"\nprint(a_string)\n```\n`````\n\n## Equations\n\nUse `$` delimiters for inline math and `$$` delimiters for display math. For example:\n\n+-------------------------------+-------------------------+\n| Markdown Syntax               | Output                  |\n+===============================+=========================+\n|     inline math: $E = mc^{2}$ | inline math: $E=mc^{2}$ |\n+-------------------------------+-------------------------+\n|     display math:             | display math:\\          |\n|                               | $$E = mc^{2}$$          |\n|     $$E = mc^{2}$$            |                         |\n+-------------------------------+-------------------------+\n\n## Diagrams\n\nQuarto has native support for embedding [Mermaid](https://mermaid-js.github.io/mermaid/#/) and [Graphviz](https://graphviz.org/) diagrams. This enables you to create flowcharts, sequence diagrams, state diagrams, gnatt charts, and more using a plain text syntax inspired by markdown.\n\nFor example, here we embed a flowchart created using Mermaid:\n\n\n```{mermaid}\n%%| echo: fenced\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]\n```\n\n\n## Videos\n\nYou can include videos in documents using the `{{{< video >}}}` shortcode. For example, here we embed a YouTube video:\n\n\n{{< video https://www.youtube.com/embed/88yZaex5L24 aspect-ratio=\"4x3\"  start=\"14\"  >}}\n\n\n\nVideos can refer to video files (e.g. MPEG) or can be links to videos published on YouTube, Vimeo, or BrightCove.\n\n## Page Breaks\n\nThe `pagebreak` shortcode enables you to insert a native pagebreak into a document (.e.g in LaTeX this would be a `\\newpage`, in MS Word a docx-native pagebreak, in HTML a `page-break-after: always` CSS directive, etc.):\n\n```{.markdown shortcodes=\"false\"}\npage 1\n{{< pagebreak >}}\npage 2\n```\n\nNative pagebreaks are supported for HTML, LaTeX, Context, MS Word, Open Document, and ePub (for other formats a form-feed character `\\f` is inserted).\n\n## Callout Blocks\n\n#### Markdown Syntax\n\n``` markdown\n:::{.callout-note}\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n```\n\n#### Output\n\n::: {.callout-note appearance=\"default\" collapse=false}\nNote that there are five types of callouts, including `note`, `tip`, `warning`, `caution`, and `important`. There are 3 different styles `simple`,`minimal`,`default`. \n:::\n\n## Code Blocks\n\nFor a demonstration of a line plot on a polar axis, see @fig-polar.\n\n::: {.cell execution_count=2}\n``` {.python .cell-code code-fold=\"show\"}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(\n  subplot_kw = {'projection': 'polar'} \n)\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![A line plot on a polar axis](index_files/figure-html/fig-polar-output-1.png){#fig-polar width=450 height=439}\n:::\n:::\n\n\n### Inline Code\nTo include executable expressions within markdown in a Python notebook, you use [`IPython.display.Markdown`](https://ipython.readthedocs.io/en/stable/api/generated/IPython.display.html) to dynamically generate markdown from within an ordinary code cell. For example, if we have a variable `radius` we can use it within markdown as follows:\n\n::: {.cell execution_count=3}\n``` {.python .cell-code code-fold=\"show\"}\nradius = 10\nfrom IPython.display import display, Markdown\ndisplay(Markdown(f\"\"\"\nThe radius of the circle is {radius}.\n\"\"\"))\n```\n\n::: {.cell-output .cell-output-display}\n\nThe radius of the circle is 10.\n\n:::\n:::\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [],
    "includes": {}
  }
}